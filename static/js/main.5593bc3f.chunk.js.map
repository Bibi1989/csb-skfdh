{"version":3,"sources":["constants/constantValues.js","components/commons/Table.js","components/Movies/FilmDetail.js","components/Movies/Film.js","constants/api.js","components/Movies/index.js","App.js","index.js"],"names":["feetVar","Table","characters","onDoubleClickSort","onSort","heightSum","toggle","reduce","accumulator","value","Number","height","feet","Math","floor","inch","toFixed","split","width","onDoubleClick","className","map","character","index","name","gender","length","options","id","label","FilmDetail","film","charactersUrl","loading","useState","setCharacters","setToggle","characterLoading","setCharacterLoading","fetchData","useCallback","query","sortType","a","field","Promise","all","url","fetch","then","res","json","response","sort","b","localeCompare","filter","alert","message","useEffect","title","opening_crawl","onChange","select","e","stopPropagation","Film","data","error","state","setState","fetchFilmFromSwapi","results","useFetch","setFilm","starwarTitle","release_date","star","src","alt","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kMAAaA,EAAU,Q,OCqDRC,EAlDD,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,WAAoBC,GAAgC,EAAxCC,OAAwC,EAAhCD,mBAC7BE,GAD6D,EAAbC,OACvC,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAYK,QAC5B,SAACC,EAAaC,GAAd,OAAyBD,EAAeE,OAAM,OAACD,QAAD,IAACA,OAAD,EAACA,EAAOE,UACtD,IAGIC,EAAOC,KAAKC,MAAMT,EAAYL,GAC9Be,GAAQV,EAAYL,GAASgB,QAAQ,GAAGC,MAAM,KAAK,GAEzD,OACE,mCACE,wBAAOC,MAAM,OAAb,UACE,gCACE,+BACE,qBAAIC,cAAe,kBAAMhB,EAAkB,SAA3C,UACE,wCADF,IACoB,mBAAGiB,UAAU,mBAEjC,qBAAID,cAAe,kBAAMhB,EAAkB,WAA3C,UACE,0CADF,IACsB,mBAAGiB,UAAU,mBAEnC,qBAAID,cAAe,kBAAMhB,EAAkB,WAA3C,UACE,0CADF,IACsB,mBAAGiB,UAAU,wBAIvC,yCACGlB,QADH,IACGA,OADH,EACGA,EAAYmB,KAAI,SAACC,EAAWC,GAC3B,OACE,+BACE,oCAAKD,QAAL,IAAKA,OAAL,EAAKA,EAAWE,OAChB,oCAAKF,QAAL,IAAKA,OAAL,EAAKA,EAAWG,SAChB,oCAAKH,QAAL,IAAKA,OAAL,EAAKA,EAAWX,WAHTY,MAOb,+BACE,+BACGlB,EADH,QACmBO,EADnB,MAC4BG,EAD5B,SAGA,oBAAIK,UAAU,QAAd,SACE,wCAAOlB,QAAP,IAAOA,OAAP,EAAOA,EAAYwB,OAAnB,mBAEF,mCCzCNC,EAAU,CACd,CAAEC,GAAI,EAAGC,MAAO,MAAOpB,MAAO,IAC9B,CAAEmB,GAAI,EAAGC,MAAO,OAAQpB,MAAO,QAC/B,CAAEmB,GAAI,EAAGC,MAAO,SAAUpB,MAAO,UACjC,CAAEmB,GAAI,EAAGC,MAAO,SAAUpB,MAAO,WAsHpBqB,EAnHI,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KACdC,GADkC,EAAdC,QACP,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAM7B,YAE5B,EAAoCgC,mBAAS,IAA7C,mBAAOhC,EAAP,KAAmBiC,EAAnB,KACA,EAA4BD,oBAAS,GAArC,mBAAO5B,EAAP,KAAe8B,EAAf,KACA,EAAgDF,oBAAS,GAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KAEMC,EAAYC,sBAAW,uCAC3B,WAAOC,EAAOC,GAAd,6BAAAC,EAAA,6DAAwBC,EAAxB,+BAAgC,OAAhC,SAEIN,GAAoB,GAFxB,SAG2BO,QAAQC,IAC7Bd,EAAcX,KAAI,SAAC0B,GAAD,OAASC,MAAMD,GAAKE,MAAK,SAACC,GAAD,OAASA,EAAIC,cAJ9D,UAGUC,EAHV,OAMkB,SAAVX,EANR,uBAOUC,GACFP,EAAa,OACXiB,QADW,IACXA,OADW,EACXA,EAAUC,MAAK,SAACV,EAAGW,GAAJ,OAAUX,EAAEnB,KAAK+B,cAAcD,EAAE9B,UAElDc,GAAoB,GACpBF,GAAU,KAEVD,EACEiB,EAASC,MAAK,SAACV,EAAGW,GAAJ,OAAUA,EAAE9B,KAAK+B,cAAcZ,EAAEnB,UAEjDc,GAAoB,GACpBF,GAAU,IAlBlB,6BAsBkB,gBAAVK,EAtBR,wBAuBUC,GACFP,EAAa,OACXiB,QADW,IACXA,OADW,EACXA,EAAUC,MAAK,SAACV,EAAGW,GAAJ,OAAUX,EAAEC,GAAOW,cAAcD,EAAEV,QAEpDN,GAAoB,GACpBF,GAAU,KAEVD,EACEiB,EAASC,MAAK,SAACV,EAAGW,GAAJ,OAAUA,EAAEV,GAAOW,cAAcZ,EAAEC,QAEnDN,GAAoB,GACpBF,GAAU,IAEZE,GAAoB,GApC1B,8BAuCkB,WAAVG,EAvCR,wBAwCMN,EACEiB,EAASI,QACP,SAAClC,GAAD,MACwB,UAAb,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWG,SAA2C,YAAb,OAATH,QAAS,IAATA,OAAA,EAAAA,EAAWG,YAGjDa,GAAoB,GA9C1B,2BAiDIH,EACEM,EACIW,EAASI,QAAO,SAAClC,GAAD,OAAwB,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWG,UAAWgB,KACrDW,GAENd,GAAoB,GAtDxB,kDAwDImB,MAAK,OAAC,EAAD,yBAAC,KAAOC,SACbpB,GAAoB,GAzDxB,0DAD2B,wDA6D3B,CAACN,EAAeG,IAGlBwB,qBAAU,WACRpB,MACC,CAACJ,EAAeI,IAenB,OACE,sBAAKnB,UAAU,cAAf,UACE,oCAAKW,QAAL,IAAKA,OAAL,EAAKA,EAAM6B,QACX,mBAAGxC,UAAU,UAAb,SACE,sCAAOW,QAAP,IAAOA,OAAP,EAAOA,EAAM8B,kBAEf,qBAAKzC,UAAU,qBAAf,SACE,cAAC,IAAD,CACEO,QAASA,EACTP,UAAU,6BACV0C,SAvBe,SAACC,GACtBxB,EAAS,OAACwB,QAAD,IAACA,OAAD,EAACA,EAAQtD,YAyBf4B,EACC,mBAAGjB,UAAU,UAAb,wBAEA,cAAC,EAAD,CACElB,WAAYA,EACZE,OA3BO,SAAC4D,GACdA,EAAEC,kBACF1B,EAAU,OAAQjC,IA0BZH,kBAvBkB,SAACyC,GACzBL,EAAU,cAAejC,EAAQsC,IAuB3BtC,OAAQA,QC7EH4D,EArCF,WAAO,IAAD,IACjB,ECJsB,SAACnB,GACvB,MAA0Bb,mBAAS,CACjCD,SAAS,EACTkC,KAAM,GACNC,MAAO,OAHT,mBAAOC,EAAP,KAAcC,EAAd,KAKMC,EAAkB,uCAAG,8BAAA5B,EAAA,sEAEvB2B,EAAS,2BACJD,GADG,IAENpC,SAAS,EACTmC,MAAO,QALc,SAOApB,MAAMD,GAPN,cAOjBK,EAPiB,gBAQDA,EAASD,OARR,OAQjBqB,EARiB,OASvBF,EAAS,CACPrC,SAAS,EACTkC,KAAMK,EACNJ,MAAO,OAZc,kDAevBE,EAAS,2BACJD,GADG,IAENpC,SAAS,EACTmC,MAAK,OAAC,EAAD,yBAAE,KAAOV,WAlBO,0DAAH,qDA2BxB,OAJAC,qBAAU,WACRY,MACC,IAEIF,ED7BmBI,CAAS,+BAA3BN,EAAR,EAAQA,KAAMlC,EAAd,EAAcA,QAEd,EAAwBC,qBAAxB,mBAAOH,EAAP,KAAa2C,EAAb,KAEMC,EAAY,OAAGR,QAAH,IAAGA,GAAH,UAAGA,EAAMK,eAAT,iBAAG,EACjBnB,MAAK,SAACV,EAAGW,GAAJ,OAAUX,EAAEiC,aAAarB,cAAcD,EAAEsB,wBADhC,aAAG,EAEjBvD,KAAI,SAACwD,GACL,MAAO,CACLhD,MAAK,OAAEgD,QAAF,IAAEA,OAAF,EAAEA,EAAMjB,MACbnD,MAAOoE,MAQb,OACE,gCACE,cAAC,IAAD,CAAQlD,QAASgD,EAAcb,SANd,SAACC,GACpBW,EAAO,OAACX,QAAD,IAACA,OAAD,EAACA,EAAQtD,UAMbsB,EACC,cAAC,EAAD,CAAYA,KAAMA,EAAME,QAASA,IAEjC,qBAAKb,UAAU,YAAf,SACE,qBACE0D,IAAI,kDACJ5D,MAAM,QACNP,OAAO,QACPoE,IAAI,wBEhCDb,I,MCCA,SAASc,IACtB,OACE,sBAAK5D,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,OCFN,IAAM6D,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACL,EAAD,MAEFC,K","file":"static/js/main.5593bc3f.chunk.js","sourcesContent":["export const feetVar = 0.032808;\n","import React from \"react\";\nimport { feetVar } from \"../../constants/constantValues\";\n\nconst Table = ({ characters, onSort, onDoubleClickSort, toggle }) => {\n  const heightSum = characters?.reduce(\n    (accumulator, value) => (accumulator += Number(value?.height)),\n    0\n  );\n\n  const feet = Math.floor(heightSum * feetVar);\n  const inch = (heightSum / feetVar).toFixed(2).split(\".\")[1];\n\n  return (\n    <>\n      <table width=\"100%\">\n        <thead>\n          <tr>\n            <td onDoubleClick={() => onDoubleClickSort(\"name\")}>\n              <span>Name</span> <i className=\"fas fa-sort\"></i>\n            </td>\n            <td onDoubleClick={() => onDoubleClickSort(\"gender\")}>\n              <span>Gender</span> <i className=\"fas fa-sort\"></i>\n            </td>\n            <td onDoubleClick={() => onDoubleClickSort(\"height\")}>\n              <span>Height</span> <i className=\"fas fa-sort\"></i>\n            </td>\n          </tr>\n        </thead>\n        <tbody>\n          {characters?.map((character, index) => {\n            return (\n              <tr key={index}>\n                <td>{character?.name}</td>\n                <td>{character?.gender}</td>\n                <td>{character?.height}</td>\n              </tr>\n            );\n          })}\n          <tr>\n            <td>\n              {heightSum} cm ({feet}ft/{inch}in)\n            </td>\n            <td className=\"total\">\n              <span>{characters?.length} characters</span>\n            </td>\n            <td></td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Table;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport Table from \"../commons/Table\";\n\nconst options = [\n  { id: 1, label: \"All\", value: \"\" },\n  { id: 1, label: \"Male\", value: \"male\" },\n  { id: 1, label: \"Female\", value: \"female\" },\n  { id: 1, label: \"Others\", value: \"others\" }\n];\n\nconst FilmDetail = ({ film, loading }) => {\n  const charactersUrl = film?.characters;\n\n  const [characters, setCharacters] = useState([]);\n  const [toggle, setToggle] = useState(true);\n  const [characterLoading, setCharacterLoading] = useState(false);\n\n  const fetchData = useCallback(\n    async (query, sortType, field = \"name\") => {\n      try {\n        setCharacterLoading(true);\n        const response = await Promise.all(\n          charactersUrl.map((url) => fetch(url).then((res) => res.json()))\n        );\n        if (query === \"sort\") {\n          if (sortType) {\n            setCharacters(\n              response?.sort((a, b) => a.name.localeCompare(b.name))\n            );\n            setCharacterLoading(false);\n            setToggle(false);\n          } else {\n            setCharacters(\n              response.sort((a, b) => b.name.localeCompare(a.name))\n            );\n            setCharacterLoading(false);\n            setToggle(true);\n          }\n          return;\n        }\n        if (query === \"doubleClick\") {\n          if (sortType) {\n            setCharacters(\n              response?.sort((a, b) => a[field].localeCompare(b[field]))\n            );\n            setCharacterLoading(false);\n            setToggle(false);\n          } else {\n            setCharacters(\n              response.sort((a, b) => b[field].localeCompare(a[field]))\n            );\n            setCharacterLoading(false);\n            setToggle(true);\n          }\n          setCharacterLoading(false);\n          return;\n        }\n        if (query === \"others\") {\n          setCharacters(\n            response.filter(\n              (character) =>\n                character?.gender !== \"male\" && character?.gender !== \"female\"\n            )\n          );\n          setCharacterLoading(false);\n          return;\n        }\n        setCharacters(\n          query\n            ? response.filter((character) => character?.gender === query)\n            : response\n        );\n        setCharacterLoading(false);\n      } catch (error) {\n        alert(error?.message);\n        setCharacterLoading(false);\n      }\n    },\n    [charactersUrl, setCharacters]\n  );\n\n  useEffect(() => {\n    fetchData();\n  }, [setCharacters, fetchData]);\n\n  const filterByGender = (select) => {\n    fetchData(select?.value);\n  };\n\n  const onSort = (e) => {\n    e.stopPropagation();\n    fetchData(\"sort\", toggle);\n  };\n\n  const onDoubleClickSort = (field) => {\n    fetchData(\"doubleClick\", toggle, field);\n  };\n\n  return (\n    <div className=\"film-detail\">\n      <h1>{film?.title}</h1>\n      <p className=\"marquee\">\n        <span>{film?.opening_crawl}</span>\n      </p>\n      <div className=\"film-detail-select\">\n        <Select\n          options={options}\n          className=\"film-detail-select__select\"\n          onChange={filterByGender}\n        />\n      </div>\n      {characterLoading ? (\n        <p className=\"loading\">Loading...</p>\n      ) : (\n        <Table\n          characters={characters}\n          onSort={onSort}\n          onDoubleClickSort={onDoubleClickSort}\n          toggle={toggle}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default FilmDetail;\n","import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport { useFetch } from \"../../constants/api\";\nimport FilmDetail from \"./FilmDetail\";\n\nconst Film = () => {\n  const { data, loading } = useFetch(\"https://swapi.dev/api/films\");\n\n  const [film, setFilm] = useState();\n\n  const starwarTitle = data?.results\n    ?.sort((a, b) => a.release_date.localeCompare(b.release_date))\n    ?.map((star) => {\n      return {\n        label: star?.title,\n        value: star\n      };\n    });\n\n  const handleSelect = (select) => {\n    setFilm(select?.value);\n  };\n\n  return (\n    <div>\n      <Select options={starwarTitle} onChange={handleSelect} />\n      {film ? (\n        <FilmDetail film={film} loading={loading} />\n      ) : (\n        <div className=\"star-logo\">\n          <img\n            src=\"https://pipedream.com/s.v0/app_mE7hlb/logo/orig\"\n            width=\"300px\"\n            height=\"300px\"\n            alt=\"star war logo\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Film;\n","import { useEffect, useState } from \"react\";\n\nexport const useFetch = (url) => {\n  const [state, setState] = useState({\n    loading: false,\n    data: [],\n    error: null\n  });\n  const fetchFilmFromSwapi = async () => {\n    try {\n      setState({\n        ...state,\n        loading: true,\n        error: null\n      });\n      const response = await fetch(url);\n      const results = await response.json();\n      setState({\n        loading: false,\n        data: results,\n        error: null\n      });\n    } catch (error) {\n      setState({\n        ...state,\n        loading: false,\n        error: error?.message\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchFilmFromSwapi();\n  }, []);\n\n  return state;\n};\n","import Film from \"./Film\";\n\nexport default Film;\n","import Film from \"./components/Movies\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Star Warship</h1>\n      <Film />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}